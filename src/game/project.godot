; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

_global_script_classes=[{
"base": "Controller",
"class": &"AIController",
"language": &"GDScript",
"path": "res://scripts/entities/components/controllers/ai_controller.gd"
}, {
"base": "Component",
"class": &"Body",
"language": &"GDScript",
"path": "res://scripts/entities/components/bodies/body.gd"
}, {
"base": "Resource",
"class": &"BodyPartResource",
"language": &"GDScript",
"path": "res://scripts/entities/components/bodies/collection/body_part.gd"
}, {
"base": "Resource",
"class": &"BodyPartsCollectionResource",
"language": &"GDScript",
"path": "res://scripts/entities/components/bodies/collection/collection.gd"
}, {
"base": "MeshInstance3D",
"class": &"BodySlot",
"language": &"GDScript",
"path": "res://scripts/entities/components/bodies/slots/slot.gd"
}, {
"base": "Entity",
"class": &"Character",
"language": &"GDScript",
"path": "res://scripts/entities/characters/character.gd"
}, {
"base": "State",
"class": &"CharacterState",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/states/character/character_state.gd"
}, {
"base": "ConnectionStrategy",
"class": &"ClientConnectionStrategy",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/client/client.gd"
}, {
"base": "Node",
"class": &"ClockSynchronizer",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/clock_synchronizer.gd"
}, {
"base": "Stateful",
"class": &"Component",
"language": &"GDScript",
"path": "res://scripts/entities/components/component.gd"
}, {
"base": "Node",
"class": &"ConnectionStrategy",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/connection_strategy.gd"
}, {
"base": "Component",
"class": &"Controller",
"language": &"GDScript",
"path": "res://scripts/entities/components/controllers/controller.gd"
}, {
"base": "Network",
"class": &"ENet",
"language": &"GDScript",
"path": "res://scripts/multiplayer/networks/ENet.gd"
}, {
"base": "Stateful",
"class": &"Entity",
"language": &"GDScript",
"path": "res://scripts/entities/entity.gd"
}, {
"base": "Node3D",
"class": &"EntityManager",
"language": &"GDScript",
"path": "res://scripts/multiplayer/entity_manager.gd"
}, {
"base": "CharacterState",
"class": &"FallState",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/states/character/fall.gd"
}, {
"base": "RefCounted",
"class": &"FilesUtils",
"language": &"GDScript",
"path": "res://scripts/utils/files.gd"
}, {
"base": "RefCounted",
"class": &"GPLReader",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/readers/gpl.gd"
}, {
"base": "Body",
"class": &"Humanoid",
"language": &"GDScript",
"path": "res://scripts/entities/components/bodies/humaoid.gd"
}, {
"base": "CharacterState",
"class": &"IdleState",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/states/character/idle.gd"
}, {
"base": "RefCounted",
"class": &"ImageReader",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/readers/image.gd"
}, {
"base": "Resource",
"class": &"InventoryResource",
"language": &"GDScript",
"path": "res://scripts/items/inventories/inventory.gd"
}, {
"base": "Object",
"class": &"InventoryStore",
"language": &"GDScript",
"path": "res://scripts/items/inventories/stores/store.gd"
}, {
"base": "Resource",
"class": &"ItemResource",
"language": &"GDScript",
"path": "res://scripts/items/item.gd"
}, {
"base": "MoveState",
"class": &"JumpState",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/states/character/move/jump.gd"
}, {
"base": "Component",
"class": &"LabelComponent",
"language": &"GDScript",
"path": "res://scripts/entities/components/ui/label.gd"
}, {
"base": "CharacterState",
"class": &"MoveState",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/states/character/move/move.gd"
}, {
"base": "Node",
"class": &"Network",
"language": &"GDScript",
"path": "res://scripts/multiplayer/networks/network.gd"
}, {
"base": "StateManager",
"class": &"PhysicalStateManager",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/state_managers/physical_state_manager.gd"
}, {
"base": "Character",
"class": &"Player",
"language": &"GDScript",
"path": "res://scripts/entities/characters/players/player.gd"
}, {
"base": "Controller",
"class": &"PlayerController",
"language": &"GDScript",
"path": "res://scripts/entities/components/controllers/player_controller.gd"
}, {
"base": "Resource",
"class": &"RaceResource",
"language": &"GDScript",
"path": "res://scripts/entities/components/bodies/collection/race.gd"
}, {
"base": "RefCounted",
"class": &"Reader",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/reader.gd"
}, {
"base": "ConnectionStrategy",
"class": &"ServerConnectionStrategy",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/server/server.gd"
}, {
"base": "ConnectionStrategy",
"class": &"SoloConnectionStrategy",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/solo/solo.gd"
}, {
"base": "SpringArm3D",
"class": &"SpringArmPlayer",
"language": &"GDScript",
"path": "res://scripts/entities/characters/players/spring_arm.gd"
}, {
"base": "WorldState",
"class": &"StableWorldStateBuffer",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/client/world_state_buffer/stable_world_state_buffer.gd"
}, {
"base": "WorldStateManager",
"class": &"StableWorldStateManager",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/server/world_state_managers/stable_world_state_manager.gd"
}, {
"base": "Object",
"class": &"Stack",
"language": &"GDScript",
"path": "res://scripts/items/stack.gd"
}, {
"base": "Node",
"class": &"State",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/states/state.gd"
}, {
"base": "Component",
"class": &"StateManager",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/state_managers/state_manager.gd"
}, {
"base": "Node",
"class": &"Stateful",
"language": &"GDScript",
"path": "res://scripts/entities/stateful.gd"
}, {
"base": "WorldState",
"class": &"UnstableWorldStateBuffer",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/client/world_state_buffer/unstable_world_state_buffer.gd"
}, {
"base": "WorldStateManager",
"class": &"UnstableWorldStateManager",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/server/world_state_managers/unstable_world_state_manager.gd"
}, {
"base": "RefCounted",
"class": &"VarReader",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/readers/var.gd"
}, {
"base": "RefCounted",
"class": &"VoxReader",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/readers/vox.gd"
}, {
"base": "Object",
"class": &"Voxel",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/voxel.gd"
}, {
"base": "EditorImportPlugin",
"class": &"VoxelImporter",
"language": &"GDScript",
"path": "res://addons/voxel-core/engine/importers/voxel_importer.gd"
}, {
"base": "MeshInstance3D",
"class": &"VoxelMesh",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/voxel_mesh.gd"
}, {
"base": "Resource",
"class": &"VoxelSet",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/voxel_set.gd"
}, {
"base": "RefCounted",
"class": &"VoxelToolPlugin",
"language": &"GDScript",
"path": "res://addons/voxel-core/classes/voxel_tool.gd"
}, {
"base": "MoveState",
"class": &"WalkState",
"language": &"GDScript",
"path": "res://scripts/entities/components/state_machine/states/character/move/walk.gd"
}, {
"base": "Node",
"class": &"WorldState",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/world_state.gd"
}, {
"base": "WorldState",
"class": &"WorldStateManager",
"language": &"GDScript",
"path": "res://scripts/multiplayer/connection_strategies/server/world_state_managers/world_state_manager.gd"
}]
_global_script_class_icons={
"AIController": "",
"Body": "",
"BodyPartResource": "",
"BodyPartsCollectionResource": "",
"BodySlot": "",
"Character": "",
"CharacterState": "",
"ClientConnectionStrategy": "",
"ClockSynchronizer": "",
"Component": "",
"ConnectionStrategy": "",
"Controller": "",
"ENet": "",
"Entity": "",
"EntityManager": "",
"FallState": "",
"FilesUtils": "",
"GPLReader": "",
"Humanoid": "",
"IdleState": "",
"ImageReader": "res://addons/voxel-core/assets/logos/MagicaVoxel.png",
"InventoryResource": "",
"InventoryStore": "",
"ItemResource": "",
"JumpState": "",
"LabelComponent": "",
"MoveState": "",
"Network": "",
"PhysicalStateManager": "",
"Player": "",
"PlayerController": "",
"RaceResource": "",
"Reader": "",
"ServerConnectionStrategy": "",
"SoloConnectionStrategy": "",
"SpringArmPlayer": "",
"StableWorldStateBuffer": "",
"StableWorldStateManager": "",
"Stack": "",
"State": "",
"StateManager": "",
"Stateful": "",
"UnstableWorldStateBuffer": "",
"UnstableWorldStateManager": "",
"VarReader": "",
"VoxReader": "res://addons/voxel-core/assets/logos/MagicaVoxel.png",
"Voxel": "res://addons/voxel-core/assets/classes/voxel.png",
"VoxelImporter": "",
"VoxelMesh": "res://addons/voxel-core/assets/classes/voxel_mesh.png",
"VoxelSet": "res://addons/voxel-core/assets/classes/voxel_set.png",
"VoxelToolPlugin": "",
"WalkState": "",
"WorldState": "",
"WorldStateManager": ""
}

[application]

config/name="game"
run/main_scene="res://scenes/main/test_multiplayer.tscn"
config/icon="res://icon.png"
config/features=PackedStringArray("4.0", "Vulkan Clustered")

[autoload]

Multiplayer="*res://scripts/multiplayer/multiplayer.gd"
ItemDatabase="*res://scripts/items/item_database.gd"

[editor_plugins]

enabled=PackedStringArray("res://addons/voxel-core/plugin.cfg")

[importer_defaults]

VoxelVoxMeshImporter={
"pivot_mode": 1,
"scale": 1.0,
"store_colors_in_texture": false
}

[input]

controls_left={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"store_command":true,"alt_pressed":false,"shift_pressed":false,"meta_pressed":false,"command_pressed":false,"pressed":false,"keycode":0,"physical_keycode":65,"unicode":0,"echo":false,"script":null)
]
}
controls_right={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"store_command":true,"alt_pressed":false,"shift_pressed":false,"meta_pressed":false,"command_pressed":false,"pressed":false,"keycode":0,"physical_keycode":68,"unicode":0,"echo":false,"script":null)
]
}
controls_forward={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"store_command":true,"alt_pressed":false,"shift_pressed":false,"meta_pressed":false,"command_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"unicode":0,"echo":false,"script":null)
]
}
controls_backward={
"deadzone": 0.5,
"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"store_command":true,"alt_pressed":false,"shift_pressed":false,"meta_pressed":false,"command_pressed":false,"pressed":false,"keycode":0,"physical_keycode":83,"unicode":0,"echo":false,"script":null)
]
}
