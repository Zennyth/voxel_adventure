[gd_scene load_steps=5 format=3 uid="uid://duxwlo2ahx4qs"]

[ext_resource type="Script" path="res://scripts/player/spring_arm.gd" id="4_x7wvw"]

[sub_resource type="GDScript" id="GDScript_jswlp"]
script/source = "extends CharacterBody3D

@export var walk_speed: float = 30.0
@export var sprint_speed: float = walk_speed * 2
@export var accelaration: float = 6.0
@export var gravity: float = 9.8 / 5
@export var jump_force: float = 15

@onready var _spring_arm: SpringArm3D = $SpringArm3D

var _velocity = Vector3()
var _vertical_velocity: float = 0
var _last_direction = Vector3.FORWARD


func _physics_process(delta: float) -> void:
	movement_process(delta)


func movement_process(delta: float) -> void:
	var direction := Vector3.ZERO
	direction.x = Input.get_action_strength(\"left\") - Input.get_action_strength(\"right\")
	direction.z = Input.get_action_strength(\"forward\") - Input.get_action_strength(\"back\")
	direction = - direction.rotated(Vector3.UP, _spring_arm.rotation.y).normalized()
	
	var speed := walk_speed
	if Input.is_action_pressed(\"sprint\"):
		speed = sprint_speed
	
	_velocity = _velocity.lerp(direction * speed, delta * accelaration)
	_velocity += Vector3.DOWN * _vertical_velocity

	if is_on_floor() and Input.is_key_pressed(KEY_SPACE):
		_velocity.y = jump_force

	if not is_on_floor():
		_vertical_velocity += gravity * delta
	else:
		_vertical_velocity = gravity * delta

	velocity = _velocity
	move_and_slide()
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_dkpv3"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_7o8rt"]

[node name="Player" type="CharacterBody3D"]
script = SubResource( "GDScript_jswlp" )

[node name="VoxelViewer" type="VoxelViewer" parent="."]
view_distance = 512

[node name="SpringArm3D" type="SpringArm3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.571873, 0)
spring_length = 8.0
margin = 0.02
script = ExtResource( "4_x7wvw" )

[node name="Camera3D" type="Camera3D" parent="SpringArm3D"]

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource( "CapsuleMesh_dkpv3" )

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource( "CapsuleShape3D_7o8rt" )
